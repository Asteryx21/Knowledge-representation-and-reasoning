/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package erwthma7;

import com.hp.hpl.jena.ontology.OntModel;
import static com.hp.hpl.jena.ontology.OntModelSpec.OWL_MEM_MICRO_RULE_INF;
import com.hp.hpl.jena.query.Query;
import com.hp.hpl.jena.query.QueryExecution;
import com.hp.hpl.jena.query.QueryExecutionFactory;
import com.hp.hpl.jena.query.QueryFactory;
import com.hp.hpl.jena.query.QuerySolution;
import com.hp.hpl.jena.query.ResultSet;
import com.hp.hpl.jena.rdf.model.InfModel;
import com.hp.hpl.jena.rdf.model.Model;
import com.hp.hpl.jena.rdf.model.ModelFactory;
import com.hp.hpl.jena.rdf.model.RDFNode;
import com.hp.hpl.jena.rdf.model.Resource;
import com.hp.hpl.jena.rdf.model.Statement;
import com.hp.hpl.jena.rdf.model.StmtIterator;
import com.hp.hpl.jena.util.FileManager;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import org.openjena.atlas.io.IndentedWriter;

/**
 *
 * @author evans
 */
public class more_details extends javax.swing.JFrame {

    /**
     * Creates new form more_details
     */
    public more_details() {
        initComponents();
        Model data = FileManager.get().loadModel("movies_onto.owl");
        OntModel infmodel = ModelFactory.createOntologyModel( OWL_MEM_MICRO_RULE_INF, data );
  
        //////////// fill drown down menu with all movies in owl ////////////////////////////////
        String movies_names;
        movies_names = "PREFIX owl: <http://www.w3.org/2002/07/owl#>"
                + "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>"
                + "PREFIX rdfs: <http://www.w3.org/2000/01/22-rdf-schema#>"
                + "PREFIX movies: <http://www.semanticweb.org/evans/ontologies/movies#>"
                + "SELECT ?title "
                + "WHERE {"
                + "?x rdf:type movies:Movie ."
                + "?x movies:title ?title ."
                + "}";
        Query query_movies_names = QueryFactory.create(movies_names) ;
        query_movies_names.serialize(new IndentedWriter(System.out,false)) ;
        QueryExecution qexec = QueryExecutionFactory.create(query_movies_names, infmodel) ;
        ResultSet rs_movies_names = qexec.execSelect() ;
        for ( ; rs_movies_names.hasNext() ; ) {
            QuerySolution sol = rs_movies_names.nextSolution();
            RDFNode name = sol.get("title") ;
            jComboBox1.addItem(name.toString().replace("^^http://www.w3.org/2001/XMLSchema#string",""));
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Select movie:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Predicate", "Object"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(252, 252, 252)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(233, 233, 233)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(454, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1))
                .addGap(2, 2, 2)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Erwthma7 back = new Erwthma7();
        back.setVisible(true);
        this.dispose(); 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        Model data = FileManager.get().loadModel("movies_onto.owl");
        OntModel infmodel = ModelFactory.createOntologyModel( OWL_MEM_MICRO_RULE_INF, data );
        String movie_title = jComboBox1.getSelectedItem().toString();
        String movie = String.format("PREFIX owl: <http://www.w3.org/2002/07/owl#> "
        + "\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> "
        + "\nPREFIX rdfs: <http://www.w3.org/2000/01/22-rdf-schema#> "
        + "\nPREFIX movies: <http://www.semanticweb.org/evans/ontologies/movies#> "
        + "\nSELECT ?x "
        + "\nWHERE { "
        + "\n?x rdf:type movies:Movie ; "
        + "\nmovies:title ?title ;"
        + "\nFILTER(?title = '%s') \n}" , movie_title);   
        Query movie_query = QueryFactory.create(movie) ;
        movie_query.serialize(new IndentedWriter(System.out,true)) ;
        QueryExecution qexec = QueryExecutionFactory.create(movie_query, infmodel) ;
        ResultSet movie_rs= qexec.execSelect() ;
        QuerySolution sol = movie_rs.nextSolution();
        RDFNode movie_individual = sol.get("x") ;
        
        
        DefaultTableModel aModel = (DefaultTableModel) jTable1.getModel();
        aModel.setRowCount(0); // first clear existing table contents
        /////////////////////// get everything for selected URI//////////////////
        Resource r = infmodel.getResource(movie_individual.toString());
        StmtIterator iter = r.listProperties();
        while (iter.hasNext()) {
            
            Statement stmt = iter.nextStatement();

            aModel.addRow(new Object[]{stmt.getPredicate().toString(),stmt.getObject().toString() });
            jTable1.setModel(aModel); 
        }

            
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(more_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(more_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(more_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(more_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new more_details().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
